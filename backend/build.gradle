buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath group: 'org.springframework.build.gradle', name: 'propdeps-plugin', version: '0.0.7'
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: "$springBootVersion"
    }
}

apply from: "$rootDir/gradle/java.gradle"
apply plugin: 'propdeps'
apply plugin: 'org.springframework.boot'

repositories {
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    runtime project(path: ':frontend', configuration: 'archives')
    compile project(path: ':shared')
    compile deps.freemarkerInheritance
    compile deps.postgresql
    compile deps.javaxInject
    compile deps.jsoup
    compile deps.lombok
    compile deps.jooq
    compile deps.flyway
    compile deps.jspApi
    compile deps.guava
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-freemarker'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-batch'
    compile ('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    compile 'org.springframework.boot:spring-boot-starter-undertow'
    compile 'com.fasterxml.jackson.core:jackson-databind'
    compile 'org.springframework.security:spring-security-openid'
    compile 'org.springframework.security:spring-security-taglibs'
    compile 'org.springframework:spring-webmvc'
    optional 'org.springframework.boot:spring-boot-configuration-processor'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

compileJava.dependsOn processResources

jar {
    baseName = 'steam-tracker'
    libsDirName = file("$rootDir/deploy/files/steam-tracker")

    exclude('application-development.*')
    exclude('*.dist')
}

springBoot {
    backupSource = false
    mainClass = "com.x7ff.steam.SteamTracker"
}

bootRun {
    // https://youtrack.jetbrains.com/issue/IDEA-122577
    if (!project.plugins.collect { it.class.name }.any { it.endsWith('JetGradlePlugin') }) {
        sourceSets.main {
            resources {
                srcDir "${project(':frontend').buildDir}/dist"
            }
        }
    }

    addResources = true
}

bootRepackage.dependsOn check

task copyDependencies(type: Copy) {
    into "$rootDir/deploy/files/steam-tracker/libs"
    from configurations.runtime
}